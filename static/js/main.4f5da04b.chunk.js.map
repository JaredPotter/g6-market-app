{"version":3,"sources":["components/Dollar.tsx","components/Product.tsx","components/Select.tsx","components/Search.tsx","components/Cart.tsx","App.tsx","index.tsx"],"names":["Dollar","props","react","num","isNaN","toFixed","format","value","Product","handleClick","item","title","_this","price","onAddToCart","className","data-tid","this","src","imageUrl","alt","components_Dollar","onClick","React","Select","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","target","state","onSelectChange","options","map","opt","key","label","currentValue","onChange","Search","searchString","test","suggestionList","length","minimumSearchLength","thisRef","assertThisInitialized","inputSet","filter","option","optionValue","searchFieldName","RegExp","toLowerCase","currentResultSet","some","setState","bind","formatSuggestionList","_this2","results","forEach","push","type","placeholder","Cart","items","reduce","accum","quantity","handleRemoveFromCart","subtotal","rate","onRemoveFromCart","renderLineItem","subtotalAmount","taxRate","taxAmount","totalAmount","App","updateCategoryFilter","currentCategoryValue","categories","products","cartItems","category","existing","find","i","slice","itemsClone","newCartItems","productList","product","Product_Product","href","Search_Search","Select_Select","Cart_Cart","ReactDOM","render","react_default","a","createElement","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.4f5da04b.chunk.js","sourcesContent":["import * as React from \"react\";\nexport interface DollarProps { value: number; }\n\nconst Dollar = (props: DollarProps) => {\n    return (\n        <div>${ format(props.value) }</div>\n    );\n};\n\nfunction format(num : number) {\n    if(!isNaN(num)) {\n        return num.toFixed(2);\n    }\n  }\n\nexport default Dollar;","import * as React from \"react\";\nimport \"./Product.scss\";\nimport Dollar from \"./Dollar\";\n\nexport interface ProductProps {\n    title: string;\n    imageUrl: string;\n    price: number;\n    category: string;\n    onAddToCart: Function;\n};\n\nexport default class Product extends React.Component<ProductProps, {}> {\n  handleClick = () => {\n    const item = {\n      title: this.props.title,\n      price: this.props.price,\n    };  \n\n    this.props.onAddToCart(item);\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"product-container\" data-tid=\"container\">\n          <div className=\"title\">{ this.props.title }</div>\n          <div className=\"img\">\n            <img src={ this.props.imageUrl } alt={ this.props.title }/>\n          </div>\n          <div className=\"bottom\">\n            {/* <div className=\"price\">{ this.props.price }</div> */}\n            <Dollar value={ this.props.price }/>\n            <button onClick={ this.handleClick } className=\"add-to-cart-button\">Add to Cart</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}","import * as React from 'react';\nimport './Product.scss';\n\nexport interface SelectProps {\n  currentValue: string;\n  options: Array<any>;\n  onSelectChange: any;\n};\n\nexport interface SelectState {\n  onSelectChange: any;\n};\n\nexport default class Select extends React.Component<SelectProps, SelectState> {\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      onSelectChange: props.onSelectChange,\n    };\n  }\n\n  handleChange = (e: any) => {\n    const value = e.target.value;\n\n    this.state.onSelectChange(value);\n  }\n\n  render() {\n    let options = this.props.options.map((opt) => {\n      return (\n        <option key={opt.value} value={opt.value}>{opt.label}</option>\n      );\n    });\n\n    return (\n      <div>\n        {/* <div>Current Value: { this.props.currentValue }</div> */}\n        <select value={this.props.currentValue} onChange={this.handleChange}>\n          {options}\n        </select>\n      </div>\n    );\n  }\n};\n\n","import * as React from \"react\";\nimport './Search.scss';\n\nexport interface SearchProps { \n    inputSet: Array<any>;\n    searchFieldName: string;\n    // currentQueryValue: string;\n    minimumSearchLength: number;\n}\n\nexport interface SearchState {\n    suggestionList: Array<any>;\n    currentResultSet: Array<any>;\n}\n\nexport default class Search extends React.Component<SearchProps, SearchState> {   \n    constructor(props : SearchProps) {\n        super(props);\n\n        this.handleChange = this.handleChange.bind(this);\n        this.formatSuggestionList = this.formatSuggestionList.bind(this);\n        this.state = {\n            suggestionList: [],\n            currentResultSet: []\n        };\n    }\n    \n    handleChange = (e : any) => {\n        const searchString = e.target.value;\n    \n        // Valid if alpha or approved special character.            \n        if(!(/\\w+/.test(searchString))) {\n            this.setState({\n                suggestionList: []\n            });\n\n            return;\n        }\n\n        let suggestionList = null;\n\n        if(searchString.length >= this.props.minimumSearchLength) {\n            let thisRef = this;\n            suggestionList = this.props.inputSet.filter((option) => {\n                let optionValue = option[thisRef.props.searchFieldName];\n\n                if(\n                    (\n                        (new RegExp('^' + searchString.toLowerCase())).test(optionValue.toLowerCase()) // Regex search on whole list of partial match.\n                        ||\n                        (new RegExp('^.*' + searchString.toLowerCase() + '.*$')).test(optionValue.toLowerCase())\n                    )\n                    &&\n                    !this.state.currentResultSet.some(item => item === option) // Excludes words already on the list.\n                    //^this line is still likely broken.\n                )\n                {\n                    return true\n                }\n            });\n            \n        }\n        else {\n            suggestionList = [];\n        }        \n\n        this.setState({\n            suggestionList: suggestionList,\n        });\n      }\n\n    formatSuggestionList(suggestionList : Array<any>) {\n        const results: any[] = [];\n\n        suggestionList.forEach(item => {\n            let value = item[this.props.searchFieldName];\n            results.push(value);\n        });\n\n        return results;\n    }\n\n    render() {\n        if(this.state.suggestionList.length > 1) {\n            return (\n                <div className=\"search-container\">\n                    <input type=\"text\" onChange={ this.handleChange } placeholder=\"Search...\"/>\n                    <ul>\n                        <li>{ this.formatSuggestionList(this.state.suggestionList) }</li>\n                    </ul>\n                </div>\n            );\n        }\n        else {\n            return (\n                <div className=\"search-container\">\n                    <input type=\"text\" onChange={ this.handleChange } placeholder=\"Search...\"/>\n                </div>\n            );\n        }\n    };\n};","import * as React from \"react\";\nimport './Cart.scss';\nimport Dollar from './Dollar';\n\nexport interface CartProps { \n    items: Array<any>;\n    taxRate: number;\n    onRemoveFromCart: Function;\n}\n\nexport default class Cart extends React.Component<CartProps, {}> {   \n    constructor(props : CartProps) {\n        super(props);\n\n        this.state = {};\n    }\n\n    subtotalAmount(items : Array<any>) {\n        let subtotal = items.reduce((accum, item) => { return accum + item.price * item.quantity}, 0);\n\n        return subtotal;\n    }\n\n    renderLineItem(items : Array<any>) {\n        const lineItems = items.map((item) => {\n            return (\n                <tr key={ item.title }>\n                    <td>\n                        { item.title }\n                    </td>\n                    <td className=\"quantity\">\n                        { item.quantity }\n                    </td>\n                    <td>\n                        <Dollar value={ item.price }/>\n                    </td>\n                    <td onClick={ () => this.handleRemoveFromCart(item) } className=\"remove\">\n                        X\n                    </td>\n                </tr>\n            );\n        });\n\n        return lineItems;\n    };\n\n    subtotal(subtotal : number) {\n        return (\n            <tr>\n                <td>\n                    Subtotal\n                </td>\n                <td>\n                    <Dollar value={ subtotal }/>\n                </td>\n            </tr>\n        );\n    }\n\n    taxRate(rate : number) {\n        return (\n            <tr>\n                <td>Tax Rate</td>\n                <td>\n                    { rate * 100 }%\n                </td>\n            </tr>\n        );\n    };\n\n    taxAmount(rate : number, subtotal : number) {\n        return (\n            <tr>\n                <td>Tax Amount</td>\n                <td>\n                    <Dollar value={ rate * subtotal }/>\n                </td>\n            </tr>\n        );\n    };\n\n    totalAmount(rate : number, subtotal : number) {\n        return (\n            <tr>\n                <td><strong>Total</strong></td>\n                <td>\n                    <strong><Dollar value={ (rate * subtotal) + subtotal }/></strong>\n                </td>\n            </tr>            \n        );\n    };\n\n    handleRemoveFromCart(item : any) {\n        this.props.onRemoveFromCart(item);\n    }\n\n    render() {\n        return (\n            <div className=\"cart-container\">\n                <h3>Cart</h3>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Item</th>\n                            <th>Quantity</th>\n                            <th>Price</th>\n                            <th>Remove</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        { this.renderLineItem(this.props.items ) }\n                    </tbody>\n                </table>\n                <table>\n                    <tbody>\n                        { this.subtotal(this.subtotalAmount(this.props.items)) }\n                        { this.taxRate(this.props.taxRate) }\n                        { this.taxAmount(this.props.taxRate, this.subtotalAmount(this.props.items)) }\n                        { this.totalAmount(this.props.taxRate, this.subtotalAmount(this.props.items)) }\n                    </tbody>\n                </table>\n            </div>\n        );\n    };\n};","import * as React from 'react';\nimport './App.scss';\nimport Product from './components/Product';\nimport Select from './components/Select';\nimport Search from './components/Search';\nimport Cart from './components/Cart';\nimport categories from './categories.json';\nimport products from './products.json';\n\nexport interface AppState {\n  currentCategoryValue: any;\n  categories: Array<any>;\n  products: Array<any>;\n  cartItems: Array<any>;\n};\n\nexport default class App extends React.Component<{}, AppState> {\n  constructor(props : any) {\n    super(props);\n\n    this.updateCategoryFilter = this.updateCategoryFilter.bind(this);\n    // this.onRemoveFromCart = this.onRemoveFromCart.bind(this);\n    this.state = {\n      currentCategoryValue: 'all',\n      categories: categories,\n      products: products,\n      cartItems: [\n        {\n          title: 'Bananas',\n          price: 0.99,\n          quantity: 3\n        }\n      ]\n    };\n  }\n\n  updateCategoryFilter(category : string) {\n    this.setState({\n      currentCategoryValue: category,\n    });\n  };\n\n  onAddToCart(item : any) {\n    const existing = this.state.cartItems.find((i) => { \n      return i.title === item.title\n    });\n    \n    if(existing) {\n      // Increment quantity by 1.\n      existing.quantity++;\n      this.setState({\n        cartItems: this.state.cartItems.slice(0)\n      });\n    }\n    else {\n      // Add new item to cart.\n      const itemsClone =  this.state.cartItems.slice(0);\n      item.quantity = 1;\n\n      itemsClone.push(item);\n      this.setState({\n        cartItems: itemsClone\n      });\n    }\n  };\n\n  onRemoveFromCart(item : any) {\n    const cartItems = this.state.cartItems.slice(0);\n    const newCartItems = cartItems.filter(i => {\n      return i.title !== item.title\n    });\n\n    this.setState({\n      cartItems: newCartItems\n    });\n  }\n\n  render() {\n    let filteredProductList = [];\n    const category = this.state.currentCategoryValue;\n\n    if(category !== 'all') {\n      filteredProductList = this.state.products.filter((product) => {\n        return product.category === category;\n      });\n    }\n    else {\n      filteredProductList = this.state.products.slice(0);\n    }\n\n    const productList = filteredProductList.map((item) => {\n      return (\n        <Product\n          key={ item.title }\n          title={ item.title }\n          imageUrl={ item.imageUrl }\n          price={ item.price }\n          category={ item.category }\n          onAddToCart={ (item : any) => this.onAddToCart(item)}\n        />\n      )\n    });\n\n    return (\n      <div className=\"app\">\n        <div className=\"top-bar\">\n          <a href=\"/\">\n            <img src=\"/logo_title.png\" alt=\"G6 Market\"/>\n          </a>\n          <div className=\"search\">\n            <Search \n              inputSet={ this.state.products }\n              searchFieldName={ 'title' }\n              minimumSearchLength={ 2 }\n            />\n          </div>\n          <div className=\"top-subtotal-cart-count\">\n            asd\n          </div>\n        </div>\n        <div className=\"left\">\n          <div className=\"filters\">\n            <div>Sort By: \n              <select>\n                <option value=\"name\">Name</option>\n                <option value=\"price\">Price</option>\n              </select>\n            </div>\n            <div>\n              Category:\n              <Select \n                currentValue={ this.state.currentCategoryValue }\n                options={ this.state.categories }\n                onSelectChange={ this.updateCategoryFilter }\n              />            \n            </div>\n\n          </div>\n          <div className=\"products\">\n            { productList }\n          </div>\n        </div>\n        <div className=\"right\">\n          <Cart taxRate={ 0.05 } items={ this.state.cartItems } onRemoveFromCart={ (item : any) => this.onRemoveFromCart(item) }/>\n        </div>\n      </div>\n    );\n  }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}